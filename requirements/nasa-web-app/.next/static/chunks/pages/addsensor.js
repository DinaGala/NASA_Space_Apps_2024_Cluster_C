/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/addsensor"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5CUsers%5CUser%5COneDrive%5CDocuments%5CProjects%5CNASA_Space_Apps_2024_Cluster_C%5Crequirements%5Cnasa-web-app%5Cpages%5Caddsensor.js&page=%2Faddsensor!":
/*!******************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5CUsers%5CUser%5COneDrive%5CDocuments%5CProjects%5CNASA_Space_Apps_2024_Cluster_C%5Crequirements%5Cnasa-web-app%5Cpages%5Caddsensor.js&page=%2Faddsensor! ***!
  \******************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/addsensor\",\n      function () {\n        return __webpack_require__(/*! ./pages/addsensor.js */ \"./pages/addsensor.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/addsensor\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1DJTNBJTVDVXNlcnMlNUNVc2VyJTVDT25lRHJpdmUlNUNEb2N1bWVudHMlNUNQcm9qZWN0cyU1Q05BU0FfU3BhY2VfQXBwc18yMDI0X0NsdXN0ZXJfQyU1Q3JlcXVpcmVtZW50cyU1Q25hc2Etd2ViLWFwcCU1Q3BhZ2VzJTVDYWRkc2Vuc29yLmpzJnBhZ2U9JTJGYWRkc2Vuc29yISIsIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLGtEQUFzQjtBQUM3QztBQUNBO0FBQ0EsT0FBTyxJQUFVO0FBQ2pCLE1BQU0sVUFBVTtBQUNoQjtBQUNBLE9BQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/MGMyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAod2luZG93Ll9fTkVYVF9QID0gd2luZG93Ll9fTkVYVF9QIHx8IFtdKS5wdXNoKFtcbiAgICAgIFwiL2FkZHNlbnNvclwiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcmVxdWlyZShcIi4vcGFnZXMvYWRkc2Vuc29yLmpzXCIpO1xuICAgICAgfVxuICAgIF0pO1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5fX05FWFRfUC5wdXNoKFtcIi9hZGRzZW5zb3JcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5CUsers%5CUser%5COneDrive%5CDocuments%5CProjects%5CNASA_Space_Apps_2024_Cluster_C%5Crequirements%5Cnasa-web-app%5Cpages%5Caddsensor.js&page=%2Faddsensor!\n"));

/***/ }),

/***/ "./pages/addsensor.js":
/*!****************************!*\
  !*** ./pages/addsensor.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nconst AddSensorData = ()=>{\n    _s();\n    const [formData, setFormData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        soilMoisture: \"\",\n        temperature: \"\",\n        humidity: \"\",\n        soilpH: \"\",\n        nitrogen: \"\",\n        phosphorus: \"\",\n        potassium: \"\"\n    });\n    const handleInputChange = (e)=>{\n        const { name, value } = e.target;\n        setFormData((prevData)=>({\n                ...prevData,\n                [name]: value\n            }));\n    };\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        // Here you would typically send the data to your backend\n        console.log(\"Submitting sensor data:\", formData);\n    // Reset form or show success message\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"container mx-auto p-4\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                className: \"text-3xl font-bold mb-6 text-green-700\",\n                children: \"Add Sensor Data for Satellite Pass\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                lineNumber: 31,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-8\",\n                role: \"alert\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"font-bold\",\n                        children: \"Important\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                        lineNumber: 34,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"Please ensure all sensor readings are taken within 30 minutes of the satellite pass for optimal data correlation.\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                        lineNumber: 35,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                lineNumber: 33,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: handleSubmit,\n                className: \"bg-white p-6 rounded-lg shadow-md\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        htmlFor: \"soilMoisture\",\n                                        className: \"block text-sm font-medium text-gray-700\",\n                                        children: \"Soil Moisture (%)\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                        lineNumber: 41,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"number\",\n                                        id: \"soilMoisture\",\n                                        name: \"soilMoisture\",\n                                        value: formData.soilMoisture,\n                                        onChange: handleInputChange,\n                                        className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring focus:ring-green-200\",\n                                        required: true\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                        lineNumber: 42,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                lineNumber: 40,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        htmlFor: \"temperature\",\n                                        className: \"block text-sm font-medium text-gray-700\",\n                                        children: \"Temperature (\\xb0C)\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                        lineNumber: 53,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"number\",\n                                        id: \"temperature\",\n                                        name: \"temperature\",\n                                        value: formData.temperature,\n                                        onChange: handleInputChange,\n                                        className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring focus:ring-green-200\",\n                                        required: true\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                        lineNumber: 54,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                lineNumber: 52,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        htmlFor: \"humidity\",\n                                        className: \"block text-sm font-medium text-gray-700\",\n                                        children: \"Humidity (%)\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                        lineNumber: 65,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"number\",\n                                        id: \"humidity\",\n                                        name: \"humidity\",\n                                        value: formData.humidity,\n                                        onChange: handleInputChange,\n                                        className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring focus:ring-green-200\",\n                                        required: true\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                        lineNumber: 66,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                lineNumber: 64,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        htmlFor: \"soilpH\",\n                                        className: \"block text-sm font-medium text-gray-700\",\n                                        children: \"Soil pH\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                        lineNumber: 77,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"number\",\n                                        id: \"soilpH\",\n                                        name: \"soilpH\",\n                                        value: formData.soilpH,\n                                        onChange: handleInputChange,\n                                        className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring focus:ring-green-200\",\n                                        step: \"0.1\",\n                                        required: true\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                        lineNumber: 78,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                lineNumber: 76,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        htmlFor: \"nitrogen\",\n                                        className: \"block text-sm font-medium text-gray-700\",\n                                        children: \"Nitrogen (ppm)\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                        lineNumber: 90,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"number\",\n                                        id: \"nitrogen\",\n                                        name: \"nitrogen\",\n                                        value: formData.nitrogen,\n                                        onChange: handleInputChange,\n                                        className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring focus:ring-green-200\",\n                                        required: true\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                        lineNumber: 91,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                lineNumber: 89,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        htmlFor: \"phosphorus\",\n                                        className: \"block text-sm font-medium text-gray-700\",\n                                        children: \"Phosphorus (ppm)\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                        lineNumber: 102,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"number\",\n                                        id: \"phosphorus\",\n                                        name: \"phosphorus\",\n                                        value: formData.phosphorus,\n                                        onChange: handleInputChange,\n                                        className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring focus:ring-green-200\",\n                                        required: true\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                        lineNumber: 103,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                lineNumber: 101,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        htmlFor: \"potassium\",\n                                        className: \"block text-sm font-medium text-gray-700\",\n                                        children: \"Potassium (ppm)\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                        lineNumber: 114,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"number\",\n                                        id: \"potassium\",\n                                        name: \"potassium\",\n                                        value: formData.potassium,\n                                        onChange: handleInputChange,\n                                        className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring focus:ring-green-200\",\n                                        required: true\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                        lineNumber: 115,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                                lineNumber: 113,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                        lineNumber: 39,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-6\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            type: \"submit\",\n                            className: \"w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50\",\n                            children: \"Submit Sensor Data\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                            lineNumber: 127,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                        lineNumber: 126,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n                lineNumber: 38,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\Projects\\\\NASA_Space_Apps_2024_Cluster_C\\\\requirements\\\\nasa-web-app\\\\pages\\\\addsensor.js\",\n        lineNumber: 30,\n        columnNumber: 5\n    }, undefined);\n};\n_s(AddSensorData, \"RKKJDrlDisFpDtjHHi1pEeY0m4M=\");\n_c = AddSensorData;\n/* harmony default export */ __webpack_exports__[\"default\"] = (AddSensorData);\nvar _c;\n$RefreshReg$(_c, \"AddSensorData\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/addsensor.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5CUsers%5CUser%5COneDrive%5CDocuments%5CProjects%5CNASA_Space_Apps_2024_Cluster_C%5Crequirements%5Cnasa-web-app%5Cpages%5Caddsensor.js&page=%2Faddsensor!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);